AudioWorkletProcessor.prototype._24=function(){this._34=true;this.port.onmessage=(_44)=>{if(_44.data==="kill")this._34=false;};};class _54 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1}];}constructor(){super();this._24();}process(_64,_74,parameters){const input=_64[0];const bypass=parameters.bypass;for(let c=0;c<input.length;++c){const _84=input[c];for(let _94=0;_94<_84.length;++_94){const _a4=(bypass[_94]!==undefined)?bypass[_94]:bypass[0];
_74[_a4][c][_94]=_84[_94];}}return this._34;}}class _b4 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"gain",automationRate:"a-rate",defaultValue:1,minValue:0}];}constructor(){super();this._24();}process(_64,_74,parameters){const _c4=_64[0];const _d4=_64[1];const output=_74[0];const gain=parameters.gain;for(let c=0;c<_d4.length;++c){const _84=_d4[c];const _e4=output[c];for(let _94=0;_94<_84.length;++_94)_e4[_94]=_84[_94];}for(let c=0;c<_c4.length;++c){const _84=_c4[c];const _e4=output[c];
for(let _94=0;_94<_84.length;++_94){const _f4=(gain[_94]!==undefined)?gain[_94]:gain[0];_e4[_94]+=_84[_94]*_f4;}}return this._34;}}registerProcessor("audio-bus-input",_54);registerProcessor("audio-bus-output",_b4);class _g4 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"gain",automationRate:"a-rate",defaultValue:1.0,minValue:0.0},{name:"factor",automationRate:"a-rate",defaultValue:20,minValue:1,maxValue:100}
,{name:"resolution",automationRate:"a-rate",defaultValue:8,minValue:2,maxValue:16},{name:"mix",automationRate:"a-rate",defaultValue:0.8,minValue:0.0,maxValue:1.0}];}static _h4=[undefined,undefined,2,4,8,16,32,64,128,256,512,1024,2048,4096,8192,16384,32768];constructor(_i4){super();this._24();const _j4=_i4.outputChannelCount[0];this._k4=new Float32Array(_j4);this._l4=new Uint32Array(_j4);}process(_64,_74,parameters){const input=_64[0];const output=_74[0];const bypass=parameters.bypass;const gain=parameters.gain;
const factor=parameters.factor;const resolution=parameters.resolution;const mix=parameters.mix;for(let c=0;c<input.length;++c){const _84=input[c];const _e4=output[c];for(let _94=0;_94<_84.length;++_94){_e4[_94]=_84[_94];if(this._l4[c]===0)this._k4[c]=_84[_94];const _m4=(factor[_94]!==undefined)?factor[_94]:factor[0];++this._l4[c];this._l4[c]%=_m4;const _a4=(bypass[_94]!==undefined)?bypass[_94]:bypass[0];if(_a4>0.0){continue;}let _n4=this._k4[c];const _f4=(gain[_94]!==undefined)?gain[_94]:gain[0];_n4*=_f4;_n4=Math.max(Math.min(_n4,
1.0),-1.0);const _o4=(resolution[_94]!==undefined)?resolution[_94]:resolution[0];const max=(_n4>0.0)?_g4._h4[_o4]-1:_g4._h4[_o4];_n4=Math.round(_n4*max)/max;const _p4=(mix[_94]!==undefined)?mix[_94]:mix[0];_e4[_94]*=(1.0-_p4);_e4[_94]+=(_n4*_p4);}}return this._34;}}registerProcessor("bitcrusher-processor",_g4);class _q4{constructor(_r4=1e-3){this.setTime(_r4);}setTime(_r4){this._s4=Math.exp(-1/(_r4*sampleRate));}process(_t4,_u4){return _t4+this._s4*(_u4-_t4);}}class _v4{constructor(_w4,_x4){this._y4=new _q4(_w4);
this._z4=new _q4(_x4);this._A4=_w4;this._B4=_x4;}_C4(_r4){if(_r4===this._A4)return;this._y4.setTime(_r4);this._A4=_r4;}_D4(_r4){if(_r4===this._B4)return;this._z4.setTime(_r4);this._B4=_r4;}process(_t4,_u4){if(_t4>_u4)return this._y4.process(_t4,_u4);else return this._z4.process(_t4,_u4);}}class _E4 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"ingain",automationRate:"a-rate",defaultValue:1,minValue:0}
,{name:"threshold",automationRate:"a-rate",defaultValue:0.125,minValue:1e-3,maxValue:1},{name:"ratio",automationRate:"a-rate",defaultValue:4,minValue:1},{name:"attack",automationRate:"a-rate",defaultValue:0.05,minValue:1e-3,maxValue:1e-1},{name:"release",automationRate:"a-rate",defaultValue:0.25,minValue:1e-2,maxValue:1},{name:"outgain",automationRate:"a-rate",defaultValue:1,minValue:0}];}constructor(_F4){super();this._24();const _y4=_E4.parameterDescriptors.find(_G4=>_G4.name==="attack");const _z4=_E4.parameterDescriptors.find(_G4=>_G4.name==="release");
this._H4=new _v4(_y4.defaultValue,_z4.defaultValue);this._I4=0;}process(_J4,_K4,_L4){const input=_J4[0];const output=_K4[0];const bypass=_L4.bypass;const ingain=_L4.ingain;const outgain=_L4.outgain;const threshold=_L4.threshold;const ratio=_L4.ratio;const attack=_L4.attack;const release=_L4.release;if(input.length===0)return this._34;for(let _94=0;_94<input[0].length;++_94){let frame=input.map(_M4=>_M4[_94]);output.forEach((_M4,_N4)=>{_M4[_94]=frame[_N4];});const _O4=(ingain[_94]!==undefined)?ingain[_94]:ingain[0];
frame=frame.map(_P4=>_P4*=_O4);const rect=frame.map(_P4=>Math.abs(_P4));const max=Math.max(...rect);const _Q4=_R4(max);const _S4=(threshold[_94]!==undefined)?threshold[_94]:threshold[0];const _T4=_R4(_S4);const _U4=Math.max(0,_Q4-_T4);const _y4=(attack[_94]!==undefined)?attack[_94]:attack[0];const _z4=(release[_94]!==undefined)?release[_94]:release[0];this._H4._C4(_y4);this._H4._D4(_z4);this._I4=this._H4.process(_U4,this._I4);const _a4=(bypass[_94]!==undefined)?bypass[_94]:bypass[0];if(_a4>0)continue;const _o4=(ratio[_94]!==undefined)?ratio[_94]:ratio[0];
const _V4=(this._I4/_o4)-this._I4;const _f4=_W4(_V4);frame=frame.map(_P4=>_P4*=_f4);const _X4=(outgain[_94]!==undefined)?outgain[_94]:outgain[0];frame=frame.map(_P4=>_P4*=_X4);output.forEach((_M4,_N4)=>{_M4[_94]=frame[_N4];});}return this._34;}}function _R4(_Y4){return 20*Math.log10(_Y4);}function _W4(_Y4){return Math.pow(10,_Y4/20);}registerProcessor("compressor-processor",_E4);class _Z4 extends AudioWorkletProcessor{static __4=5.0;static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",
defaultValue:0,minValue:0,maxValue:1},{name:"time",automationRate:"a-rate",defaultValue:0.2,minValue:0.0,maxValue:_Z4.__4},{name:"feedback",automationRate:"a-rate",defaultValue:0.5,minValue:0.0,maxValue:1.0},{name:"mix",automationRate:"a-rate",defaultValue:0.35,minValue:0.0,maxValue:1.0}];}constructor(_i4){super();this._24();const _j4=_i4.outputChannelCount[0];const _05=(_Z4.__4*sampleRate)+1;this.buffer=new Array(_j4);this._15=new Uint32Array(_j4);for(let c=0;c<_j4;++c)this.buffer[c]=new Float32Array(_05);
}process(_64,_74,parameters){const input=_64[0];const output=_74[0];const bypass=parameters.bypass;const time=parameters.time;const feedback=parameters.feedback;const mix=parameters.mix;for(let c=0;c<input.length;++c){const _84=input[c];const _e4=output[c];for(let _94=0;_94<_84.length;++_94){_e4[_94]=_84[_94];const _S4=(time[_94]!==undefined)?time[_94]:time[0];const _25=this._35(c,_S4);const _m4=(feedback[_94]!==undefined)?feedback[_94]:feedback[0];const _45=_84[_94]+(_25*_m4);this.write(c,_45);const _a4=(bypass[_94]!==undefined)?bypass[_94]:bypass[0];
if(_a4>0.0){continue;}const _p4=(mix[_94]!==undefined)?mix[_94]:mix[0];_e4[_94]*=(1-_p4);_e4[_94]+=(_25*_p4);}}return this._34;}_35(_55,_r4){const _65=_r4*sampleRate;let _75=(this._15[_55]-~~_65);let _85=(_75-1);while(_75<0)_75+=this.buffer[_55].length;while(_85<0)_85+=this.buffer[_55].length;const frac=_65-~~_65;const _95=this.buffer[_55][_75];const _a5=this.buffer[_55][_85];return _95+(_a5-_95)*frac;}write(_55,_b5){++this._15[_55];this._15[_55]%=this.buffer[_55].length;this.buffer[_55][this._15[_55]]=_b5;
}}registerProcessor("delay-processor",_Z4);class _c5 extends AudioWorkletProcessor{static get parameterDescriptors(){return [];}constructor(){super();this._24();}process(_d5,_e5,_f5){const input=_d5[0];const _g5=_e5[0];const _h5=_e5[1];for(let c=0;c<input.length;++c){const _84=input[c];const _i5=_g5[c];const _j5=_h5[c];for(let _94=0;_94<_84.length;++_94){_i5[_94]=_84[_94];_j5[_94]=_84[_94];}}return this._34;}}class _k5 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",
defaultValue:0,minValue:0,maxValue:1}];}constructor(){super();this._24();}process(_d5,_e5,_f5){const _c4=_d5[0];const _d4=_d5[1];const output=_e5[0];const bypass=_f5.bypass;for(let c=0;c<_d4.length;++c){const _l5=_c4[c];const _m5=_d4[c];const _e4=output[c];for(let _94=0;_94<_l5.length;++_94){const _a4=(bypass[_94]!==undefined)?bypass[_94]:bypass[0];if(_a4>0){_e4[_94]=_m5[_94];}else {_e4[_94]=_l5[_94];}}}return this._34;}}registerProcessor("eq-input",_c5);registerProcessor("eq-output",_k5);class _n5 extends AudioWorkletProcessor{
static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"gain",automationRate:"a-rate",defaultValue:0.5,minValue:0.0}];}constructor(){super();this._24();}process(_64,_74,parameters){const input=_64[0];const output=_74[0];const bypass=parameters.bypass;const gain=parameters.gain;for(let c=0;c<input.length;++c){const _84=input[c];const _e4=output[c];for(let _94=0;_94<_84.length;++_94){_e4[_94]=_84[_94];const _a4=(bypass[_94]!==undefined)?bypass[_94]:bypass[0];
if(_a4>0.0){continue;}const _f4=(gain[_94]!==undefined)?gain[_94]:gain[0];_e4[_94]*=_f4;}}return this._34;}}registerProcessor("gain-processor",_n5);class _o5 extends AudioWorkletProcessor{static get parameterDescriptors(){const _p5=sampleRate*0.45;return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"freq",automationRate:"a-rate",defaultValue:Math.min(5000.0,_p5),minValue:10.0,maxValue:_p5},{name:"q",automationRate:"a-rate",defaultValue:1.0,minValue:1.0,maxValue:100.0}
,{name:"gain",automationRate:"a-rate",defaultValue:1e-2,minValue:1e-6}];}constructor(_i4){super();this._24();const _j4=_i4.outputChannelCount[0];this._q5=0;this._r5=0;this._s5=0;this._t5=0;this._u5=0;this._v5=new Float32Array(_j4);this._w5=new Float32Array(_j4);this._x5=new Float32Array(_j4);this._y5=new Float32Array(_j4);this._z5=-1;this._A5=-1;this._B5=-1;}process(_64,_74,parameters){const input=_64[0];const output=_74[0];const bypass=parameters.bypass;const freq=parameters.freq;const q=parameters.q;const gain=parameters.gain;
const _C5=(freq.length===1&&q.length===1&&gain.length===1);if(_C5)this._D5(freq[0],q[0],gain[0]);for(let c=0;c<input.length;++c){const _84=input[c];const _e4=output[c];for(let _94=0;_94<_84.length;++_94){if(_C5===false){const _m4=(freq[_94]!==undefined)?freq[_94]:freq[0];const _E5=(q[_94]!==undefined)?q[_94]:q[0];const _f4=(gain[_94]!==undefined)?gain[_94]:gain[0];this._D5(_m4,_E5,_f4);}const _F5=this._s5*_84[_94]+this._t5*this._v5[c]+this._u5*this._w5[c]-this._q5*this._x5[c]-this._r5*this._y5[c];this._w5[c]=this._v5[c];
this._v5[c]=_84[_94];this._y5[c]=this._x5[c];this._x5[c]=_F5;const _a4=(bypass[_94]!==undefined)?bypass[_94]:bypass[0];_e4[_94]=(_a4>0)?_84[_94]:_F5;}}return this._34;}_D5(_G5,_H5,_I5){if(_G5===this._z5&&_H5===this._A5&&_I5===this._B5)return;const _J5=2*Math.PI*_G5/sampleRate;const _K5=Math.cos(_J5);const _L5=Math.sqrt(_I5);const _M5=_L5+1;const _N5=_L5-1;const _O5=_M5*_K5;const _P5=_N5*_K5;const _Q5=_M5-_P5;const _R5=_M5+_P5;const alpha=Math.sin(_J5)/(2*_H5);const _S5=(2*Math.sqrt(_L5)*alpha);const _T5=_Q5+_S5;
const _q5=2*(_N5-_O5);const _r5=_Q5-_S5;const _s5=_L5*(_R5+_S5);const _t5=-2*_L5*(_N5+_O5);const _u5=_L5*(_R5-_S5);this._q5=_q5/_T5;this._r5=_r5/_T5;this._s5=_s5/_T5;this._t5=_t5/_T5;this._u5=_u5/_T5;this._z5=_G5;this._A5=_H5;this._B5=_I5;}}registerProcessor("hi-shelf-processor",_o5);class _U5 extends AudioWorkletProcessor{static get parameterDescriptors(){const _V5=sampleRate*0.45;return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"cutoff",automationRate:"a-rate",defaultValue:Math.min(1500.0,
_V5),minValue:10.0,maxValue:_V5},{name:"q",automationRate:"a-rate",defaultValue:1.5,minValue:1.0,maxValue:100.0}];}constructor(_i4){super();this._24();const _j4=_i4.outputChannelCount[0];this._q5=0;this._r5=0;this._s5=0;this._t5=0;this._u5=0;this._v5=new Float32Array(_j4);this._w5=new Float32Array(_j4);this._x5=new Float32Array(_j4);this._y5=new Float32Array(_j4);this._W5=-1;this._A5=-1;}process(_64,_74,parameters){const input=_64[0];const output=_74[0];const bypass=parameters.bypass;const cutoff=parameters.cutoff;
const q=parameters.q;const _C5=(cutoff.length===1&&q.length===1);if(_C5)this._D5(cutoff[0],q[0]);for(let c=0;c<input.length;++c){const _84=input[c];const _e4=output[c];for(let _94=0;_94<_84.length;++_94){if(_C5===false){const c=(cutoff[_94]!==undefined)?cutoff[_94]:cutoff[0];const _E5=(q[_94]!==undefined)?q[_94]:q[0];this._D5(c,_E5);}const _F5=this._s5*_84[_94]+this._t5*this._v5[c]+this._u5*this._w5[c]-this._q5*this._x5[c]-this._r5*this._y5[c];this._w5[c]=this._v5[c];this._v5[c]=_84[_94];this._y5[c]=this._x5[c];
this._x5[c]=_F5;const _a4=(bypass[_94]!==undefined)?bypass[_94]:bypass[0];_e4[_94]=(_a4>0)?_84[_94]:_F5;}}return this._34;}_D5(_X5,_H5){if(_X5===this._W5&&_H5===this._A5)return;const _J5=2*Math.PI*_X5/sampleRate;const alpha=Math.sin(_J5)/(2*_H5);const _K5=Math.cos(_J5);const _T5=1+alpha;const _q5=-2*_K5;const _r5=1-alpha;const _s5=(1+_K5)/2;const _t5=-1-_K5;const _u5=(1+_K5)/2;this._q5=_q5/_T5;this._r5=_r5/_T5;this._s5=_s5/_T5;this._t5=_t5/_T5;this._u5=_u5/_T5;this._W5=_X5;this._A5=_H5;}}registerProcessor("hpf2-processor",
_U5);class _Y5 extends AudioWorkletProcessor{static get parameterDescriptors(){const _p5=sampleRate*0.45;return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"freq",automationRate:"a-rate",defaultValue:Math.min(500.0,_p5),minValue:10.0,maxValue:_p5},{name:"q",automationRate:"a-rate",defaultValue:1.0,minValue:1.0,maxValue:100.0},{name:"gain",automationRate:"a-rate",defaultValue:1e-2,minValue:1e-6}];}constructor(_i4){super();this._24();const _j4=_i4.outputChannelCount[0];
this._q5=0;this._r5=0;this._s5=0;this._t5=0;this._u5=0;this._v5=new Float32Array(_j4);this._w5=new Float32Array(_j4);this._x5=new Float32Array(_j4);this._y5=new Float32Array(_j4);this._z5=-1;this._A5=-1;this._B5=-1;}process(_64,_74,parameters){const input=_64[0];const output=_74[0];const bypass=parameters.bypass;const freq=parameters.freq;const q=parameters.q;const gain=parameters.gain;const _C5=(freq.length===1&&q.length===1&&gain.length===1);if(_C5)this._D5(freq[0],q[0],gain[0]);for(let c=0;c<input.length;
++c){const _84=input[c];const _e4=output[c];for(let _94=0;_94<_84.length;++_94){if(_C5===false){const _m4=(freq[_94]!==undefined)?freq[_94]:freq[0];const _E5=(q[_94]!==undefined)?q[_94]:q[0];const _f4=(gain[_94]!==undefined)?gain[_94]:gain[0];this._D5(_m4,_E5,_f4);}const _F5=this._s5*_84[_94]+this._t5*this._v5[c]+this._u5*this._w5[c]-this._q5*this._x5[c]-this._r5*this._y5[c];this._w5[c]=this._v5[c];this._v5[c]=_84[_94];this._y5[c]=this._x5[c];this._x5[c]=_F5;const _a4=(bypass[_94]!==undefined)?bypass[_94]:bypass[0];
_e4[_94]=(_a4>0)?_84[_94]:_F5;}}return this._34;}_D5(_G5,_H5,_I5){if(_G5===this._z5&&_H5===this._A5&&_I5===this._B5)return;const _J5=2*Math.PI*_G5/sampleRate;const _K5=Math.cos(_J5);const _L5=Math.sqrt(_I5);const _M5=_L5+1;const _N5=_L5-1;const _O5=_M5*_K5;const _P5=_N5*_K5;const _Q5=_M5-_P5;const _R5=_M5+_P5;const alpha=Math.sin(_J5)/(2*_H5);const _S5=(2*Math.sqrt(_L5)*alpha);const _T5=_R5+_S5;const _q5=-2*(_N5+_O5);const _r5=_R5-_S5;const _s5=_L5*(_Q5+_S5);const _t5=2*_L5*(_N5-_O5);const _u5=_L5*(_Q5-_S5);this._q5=_q5/_T5;
this._r5=_r5/_T5;this._s5=_s5/_T5;this._t5=_t5/_T5;this._u5=_u5/_T5;this._z5=_G5;this._A5=_H5;this._B5=_I5;}}registerProcessor("lo-shelf-processor",_Y5);class _Z5 extends AudioWorkletProcessor{static get parameterDescriptors(){const _V5=sampleRate*0.45;return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"cutoff",automationRate:"a-rate",defaultValue:Math.min(500.0,_V5),minValue:10.0,maxValue:_V5},{name:"q",automationRate:"a-rate",defaultValue:1.5,minValue:1.0,maxValue:100.0}
];}constructor(_i4){super();this._24();const _j4=_i4.outputChannelCount[0];this._q5=0;this._r5=0;this._s5=0;this._t5=0;this._u5=0;this._v5=new Float32Array(_j4);this._w5=new Float32Array(_j4);this._x5=new Float32Array(_j4);this._y5=new Float32Array(_j4);this._W5=-1;this._A5=-1;}process(_64,_74,parameters){const input=_64[0];const output=_74[0];const bypass=parameters.bypass;const cutoff=parameters.cutoff;const q=parameters.q;const _C5=(cutoff.length===1&&q.length===1);if(_C5)this._D5(cutoff[0],q[0]);for(let c=0;
c<input.length;++c){const _84=input[c];const _e4=output[c];for(let _94=0;_94<_84.length;++_94){if(_C5===false){const c=(cutoff[_94]!==undefined)?cutoff[_94]:cutoff[0];const _E5=(q[_94]!==undefined)?q[_94]:q[0];this._D5(c,_E5);}const _F5=this._s5*_84[_94]+this._t5*this._v5[c]+this._u5*this._w5[c]-this._q5*this._x5[c]-this._r5*this._y5[c];this._w5[c]=this._v5[c];this._v5[c]=_84[_94];this._y5[c]=this._x5[c];this._x5[c]=_F5;const _a4=(bypass[_94]!==undefined)?bypass[_94]:bypass[0];_e4[_94]=(_a4>0)?_84[_94]:_F5;
}}return this._34;}_D5(_X5,_H5){if(_X5===this._W5&&_H5===this._A5)return;const _J5=2*Math.PI*_X5/sampleRate;const alpha=Math.sin(_J5)/(2*_H5);const _K5=Math.cos(_J5);const _T5=1+alpha;const _q5=-2*_K5;const _r5=1-alpha;const _s5=(1-_K5)/2;const _t5=1-_K5;const _u5=(1-_K5)/2;this._q5=_q5/_T5;this._r5=_r5/_T5;this._s5=_s5/_T5;this._t5=_t5/_T5;this._u5=_u5/_T5;this._W5=_X5;this._A5=_H5;}}registerProcessor("lpf2-processor",_Z5);class __5 extends AudioWorkletProcessor{static get parameterDescriptors(){const _p5=sampleRate*0.45;
return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"freq",automationRate:"a-rate",defaultValue:Math.min(1500.0,_p5),minValue:10.0,maxValue:_p5},{name:"q",automationRate:"a-rate",defaultValue:1.0,minValue:1.0,maxValue:100.0},{name:"gain",automationRate:"a-rate",defaultValue:1e-2,minValue:1e-6}];}constructor(_i4){super();this._24();const _j4=_i4.outputChannelCount[0];this._q5=0;this._r5=0;this._s5=0;this._t5=0;this._u5=0;this._v5=new Float32Array(_j4);this._w5=new Float32Array(_j4);
this._x5=new Float32Array(_j4);this._y5=new Float32Array(_j4);this._z5=-1;this._A5=-1;this._B5=-1;}process(_64,_74,parameters){const input=_64[0];const output=_74[0];const bypass=parameters.bypass;const freq=parameters.freq;const q=parameters.q;const gain=parameters.gain;const _C5=(freq.length===1&&q.length===1&&gain.length===1);if(_C5)this._D5(freq[0],q[0],gain[0]);for(let c=0;c<input.length;++c){const _84=input[c];const _e4=output[c];for(let _94=0;_94<_84.length;++_94){if(_C5===false){const _m4=(freq[_94]!==undefined)?freq[_94]:freq[0];
const _E5=(q[_94]!==undefined)?q[_94]:q[0];const _f4=(gain[_94]!==undefined)?gain[_94]:gain[0];this._D5(_m4,_E5,_f4);}const _F5=this._s5*_84[_94]+this._t5*this._v5[c]+this._u5*this._w5[c]-this._q5*this._x5[c]-this._r5*this._y5[c];this._w5[c]=this._v5[c];this._v5[c]=_84[_94];this._y5[c]=this._x5[c];this._x5[c]=_F5;const _a4=(bypass[_94]!==undefined)?bypass[_94]:bypass[0];_e4[_94]=(_a4>0)?_84[_94]:_F5;}}return this._34;}_D5(_G5,_H5,_I5){if(_G5===this._z5&&_H5===this._A5&&_I5===this._B5)return;const _J5=2*Math.PI*_G5/sampleRate;
const _K5=Math.cos(_J5);const _L5=Math.sqrt(_I5);const alpha=Math.sin(_J5)/(2*_H5);const _06=alpha/_L5;const _16=alpha*_L5;const _T5=1+_06;const _q5=-2*_K5;const _r5=1-_06;const _s5=1+_16;const _t5=_q5;const _u5=1-_16;this._q5=_q5/_T5;this._r5=_r5/_T5;this._s5=_s5/_T5;this._t5=_t5/_T5;this._u5=_u5/_T5;this._z5=_G5;this._A5=_H5;this._B5=_I5;}}registerProcessor("peak-eq-processor",__5);class _26{constructor(_36){this._46=0;this._56=0;this.feedback=0;this._66=0;this.buffer=new Float32Array(_36);this._76=0;}process(_b5){
const out=this.buffer[this._76];this._66=(this._66*this._46)+(out*this._56);this.buffer[this._76]=_b5+(this._66*this.feedback);++this._76;this._76%=this.buffer.length;return out;}_86(_96){this.feedback=Math.min(Math.max(0,_96),1);}_a6(_b6){this._46=Math.min(Math.max(0,_b6),1);this._56=1-this._46;}}class _c6{constructor(_36){this.feedback=0;this.buffer=new Float32Array(_36);this._76=0;}process(_b5){const out=this.buffer[this._76];this.buffer[this._76]=_b5+(out*this.feedback);++this._76;this._76%=this.buffer.length;
return(out-_b5);}_86(_96){this.feedback=Math.min(Math.max(0,_96),1);}}class _d6 extends AudioWorkletProcessor{static _e6=8;static _f6=4;static _g6=0.015;static _h6=0.4;static _i6=0.28;static _j6=0.7;static _k6=[1116,1188,1277,1356,1422,1491,1557,1617];static _l6=[1139,1211,1300,1379,1445,1514,1580,1640];static _m6=[556,441,341,225];static _n6=[579,464,364,248];static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"size",automationRate:"a-rate",
defaultValue:0.7,minValue:0.0,maxValue:1.0},{name:"damp",automationRate:"a-rate",defaultValue:0.1,minValue:0.0,maxValue:1.0},{name:"mix",automationRate:"a-rate",defaultValue:0.35,minValue:0.0,maxValue:1.0}];}constructor(_i4){super();this._24();const _j4=_i4.outputChannelCount[0];this._o6=-1;this._p6=-1;this._q6=new Array(_j4);this._r6=new Array(_j4);const _s6=[_d6._k6,_d6._l6];const _t6=[_d6._m6,_d6._n6];for(let c=0;c<_j4;++c){this._q6[c]=new Array(_d6._e6);this._r6[c]=new Array(_d6._f6);for(let i=0;i<_d6._e6;
++i)this._q6[c][i]=new _26(_s6[c%_s6.length][i]);for(let i=0;i<_d6._f6;++i)this._r6[c][i]=new _c6(_t6[c%_t6.length][i]);}this._u6(0.5);this._a6(0.5);for(let c=0;c<_j4;++c)for(let i=0;i<_d6._f6;++i)this._r6[c][i]._86(0.5);}process(_64,_74,parameters){const input=_64[0];const output=_74[0];const bypass=parameters.bypass;const size=parameters.size;const damp=parameters.damp;const mix=parameters.mix;for(let c=0;c<input.length;++c){const _84=input[c];const _e4=output[c];for(let _v6=0;_v6<_84.length;++_v6){const _94=(size[_v6]!==undefined)?size[_v6]:size[0];
const _w6=(damp[_v6]!==undefined)?damp[_v6]:damp[0];this._u6(_94);this._a6(_w6);_e4[_v6]=_84[_v6];let out=0;const _n4=_84[_v6]*_d6._g6;for(let i=0;i<_d6._e6;++i)out+=this._q6[c][i].process(_n4);for(let i=0;i<_d6._f6;++i)out=this._r6[c][i].process(out);const _a4=(bypass[_v6]!==undefined)?bypass[_v6]:bypass[0];if(_a4>0.0){continue;}const _p4=(mix[_v6]!==undefined)?mix[_v6]:mix[0];_e4[_v6]*=(1-_p4);_e4[_v6]+=(out*_p4);}}return this._34;}_u6(_36){if(_36===this._o6)return;const size=(_36*_d6._i6)+_d6._j6;for(let c=0;
c<this._q6.length;++c)for(let i=0;i<_d6._e6;++i)this._q6[c][i]._86(size);this._o6=_36;}_a6(_b6){if(_b6===this._p6)return;const damp=_b6*_d6._h6;for(let c=0;c<this._q6.length;++c)for(let i=0;i<_d6._e6;++i)this._q6[c][i]._a6(damp);this._p6=_b6;}}registerProcessor("reverb1-processor",_d6);class _x6 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"rate",automationRate:"a-rate",defaultValue:5.0,minValue:0.0,
maxValue:20.0},{name:"intensity",automationRate:"a-rate",defaultValue:1.0,minValue:0.0,maxValue:1.0},{name:"offset",automationRate:"a-rate",defaultValue:0.0,minValue:0.0,maxValue:1.0},{name:"shape",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:4}];}constructor(_i4){super();this._24();const _j4=_i4.outputChannelCount[0];this._y6=new Array(_j4).fill(1.0);this._z6=new Array(_j4).fill(0.0);this._A6=new Array(_j4).fill(_B6._C6._D6);this._E6=new Array(_j4);for(let c=0;c<_j4;++c){this._E6[c]=new _F6();
this._E6[c]._G6(sampleRate);this._E6[c]._H6(this._y6[c]);this._E6[c]._I6(this._A6[c]);if(c%2===1){this._E6[c]._J6(this._z6[c]);}}}process(_64,_74,parameters){const input=_64[0];const output=_74[0];const bypass=parameters.bypass;const rate=parameters.rate;const intensity=parameters.intensity;const offset=parameters.offset;const shape=parameters.shape;for(let c=0;c<input.length;++c){const _84=input[c];const _e4=output[c];for(let _94=0;_94<_84.length;++_94){_e4[_94]=_84[_94];const _o4=(rate[_94]!==undefined)?rate[_94]:rate[0];
const _K6=(offset[_94]!==undefined)?offset[_94]:offset[0];const _L6=(shape[_94]!==undefined)?shape[_94]:shape[0];this._M6(c,_o4,_K6,_L6);const _N6=this._E6[c]._35();const _a4=(bypass[_94]!==undefined)?bypass[_94]:bypass[0];if(_a4>0.0){continue;}const i=(intensity[_94]!==undefined)?intensity[_94]:intensity[0];const out=_84[_94]*_N6*i;_e4[_94]*=(1.0-i);_e4[_94]+=out;}}return this._34;}_M6(_55,_O6,_P6,_Q6){if(_O6!==this._y6[_55]){this._E6[_55]._H6(_O6);this._y6[_55]=_O6;}if(_P6!==this._z6[_55]){if(_55%2===1){
this._E6[_55]._J6(_P6);}this._z6[_55]=_P6;}if(_Q6!==this._A6[_55]){this._E6[_55]._I6(_Q6);this._A6[_55]=_Q6;}}}registerProcessor("tremolo-processor",_x6);function _B6(){}_B6._C6={_D6:0,_R6:1,_S6:2,_T6:3,_U6:4,_V6:5};_B6._W6=function(_X6){return 1.0-_X6;};_B6._Y6=function(_X6){return _X6;};_B6._Z6=function(_X6){return 0.5*(Math.sin((_X6*2.0*Math.PI)-(Math.PI/2.0))+1.0);};_B6.__6=function(_X6){if(_X6<0.5){return 0.0;}return 1.0;};_B6._07=function(_X6){if(_X6<0.5){return 2.0*_X6;}return 2.0-(2.0*_X6);};_B6._17=[_B6._W6,
_B6._Y6,_B6._Z6,_B6.__6,_B6._07];_27._37=512;_27._47=1.0/_27._37;function _27(_57){this.data=new Float32Array(_27._37);for(let i=0;i<_27._37;++i){this.data[i]=_57(i*_27._47);}}_27.prototype._35=function(_X6){_X6=Math.max(0.0,_X6);_X6=Math.min(_X6,1.0);const _67=_X6*_27._37;const _77=~~_67;const _87=_67-_77;let _75=_77;let _85=_75+1;if(_75>=_27._37){_75-=_27._37;}if(_85>=_27._37){_85-=_27._37;}const _95=this.data[_75];const _a5=this.data[_85];return _95+(_a5-_95)*_87;};_F6._97=[];_F6._a7=false;_F6._b7=0.0;_F6._p5=20.0;
function _F6(){this._c7=48000;this.shape=_B6._C6._S6;this.freq=1.0;this._d7=0.0;this._47=0.0;this._e7=0.0;if(_F6._a7==true){return;}for(let i=0;i<_B6._C6._V6;++i){_F6._97[i]=new _27(_B6._17[i]);}_F6._a7=true;}_F6._f7=function(){return(_F6._a7==true);};_F6.prototype._G6=function(_g7){this._c7=_g7;this._h7();};_F6.prototype._H6=function(_G5){_G5=Math.max(_F6._b7,_G5);_G5=Math.min(_G5,_F6._p5);this.freq=_G5;this._h7();};_F6.prototype._J6=function(_P6){_P6=Math.max(0.0,_P6);_P6=Math.min(_P6,1.0);const _i7=_P6-this._e7;
this._e7=_P6;this._d7+=_i7;while(this._d7>=1.0){this._d7-=1.0;}while(this._d7<0.0){this._d7+=1.0;}};_F6.prototype._I6=function(_Q6){_Q6=Math.max(0,_Q6);_Q6=Math.min(_Q6,_B6._C6._V6-1);this.shape=_Q6;};_F6.prototype._35=function(){const result=_F6._97[this.shape]._35(this._d7);this._d7+=this._47;while(this._d7>=1.0){this._d7-=1.0;}return result;};_F6.prototype._h7=function(){this._47=this.freq/this._c7;};